{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{356:function(t,e,n){\"use strict\";n.r(e);var l=n(42),a=Object(l.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[n(\"div\",{staticClass:\"custom-block tip\"},[n(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),n(\"p\",[t._v(\"2017-11-04 15:48，发布于博客园\")]),t._v(\" \"),n(\"p\",[n(\"a\",{attrs:{href:\"https://www.cnblogs.com/isLiu/p/7783552.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://www.cnblogs.com/isLiu/p/7783552.html\"),n(\"OutboundLink\")],1)])]),t._v(\" \"),n(\"p\",[t._v(\"布局是面试中常问的问题，尤其是这类的题目，怎么答才好呢？\")]),t._v(\" \"),n(\"p\",[t._v(\"大多数人的第一个方法是浮动，没错，浮动。第二个方法呢？你回答定位，没错。第三个方法呢？.... 第四个方法呢？第五个方法呢？....\")]),t._v(\" \"),n(\"p\",[t._v(\"其实能想起来两个方法的人，这道题已经不及格了。所以呀，我来说几种方法吧。\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",[n(\"code\",[t._v(\"随便多说一点，如果你懂语意化开发并且简历中提到，怎么让面试官知道呢？假如你写了个界面，全是div，你简历中提到的语意化开发在哪呢？你是面试官你会怎么想?\\n\")])])]),n(\"p\",[t._v(\"以下代码用语意化书写\")]),t._v(\" \"),n(\"h3\",{attrs:{id:\"第一种方法：浮动\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第一种方法：浮动\"}},[t._v(\"#\")]),t._v(\" 第一种方法：浮动\")]),t._v(\" \"),n(\"p\",[t._v(\"最常见的，不说了\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v('\\t<section class=\"layout float\">\\n\\t\\t<style type=\"text/css\">\\n\\t\\t\\t.layout.float .left{\\n\\t\\t\\t\\tfloat: left;\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: red;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.float .right{\\n\\t\\t\\t\\tfloat: right;\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: blue;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.float .center{\\n\\t\\t\\t\\tbackground: yellow;\\n\\t\\t\\t}\\n\\t\\t</style>\\n\\t\\t<article class=\"left-right-center\">\\n\\t\\t\\t<div class=\"left\"></div>\\n\\t\\t\\t<div class=\"right\"></div>\\n\\t\\t\\t<div class=\"center\">\\n\\t\\t\\t\\t<h2>浮动解决方案</h2>\\n\\t\\t\\t\\t1.这是三栏布局中间部分\\n\\t\\t\\t\\t2.这是三栏布局中间部分\\n\\t\\t\\t</div>\\n\\t\\t</article>\\n\\t</section>\\t\\t    \\n')])])]),n(\"h3\",{attrs:{id:\"第二种方法：定位\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第二种方法：定位\"}},[t._v(\"#\")]),t._v(\" 第二种方法：定位\")]),t._v(\" \"),n(\"p\",[t._v(\"不多说\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v('\\t<section class=\"layout absolute\">\\n\\t\\t<style type=\"text/css\">\\n\\t\\t\\t.layout.absolute .left-center-right>div{\\n\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.absolute .left{\\n\\t\\t\\t\\tleft: 0px;\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: red;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.absolute .center{\\n\\t\\t\\t\\tleft: 300px;\\n\\t\\t\\t\\tright: 300px;\\n\\t\\t\\t\\tbackground: yellow;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.absolute .right{\\n\\t\\t\\t\\tright: 0px;\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: blue;\\n\\t\\t\\t}\\n\\t\\t</style>\\n\\t\\t<article class=\"left-center-right\">\\n\\t\\t\\t<div class=\"left\"></div>\\n\\t\\t\\t<div class=\"center\">\\n\\t\\t\\t\\t<h2>绝对定位解决方案</h2>\\n\\t\\t\\t\\t1.这是三栏布局中间部分\\n\\t\\t\\t\\t2.这是三栏布局中间部分\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"right\"></div>\\n\\t\\t</article>\\n\\t</section>\\n')])])]),n(\"h3\",{attrs:{id:\"第三中方法：flex布局\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第三中方法：flex布局\"}},[t._v(\"#\")]),t._v(\" 第三中方法：flex布局\")]),t._v(\" \"),n(\"p\",[t._v(\"其实稍微想一下就能想到这个flex布局，\"),n(\"strong\",[n(\"font\",{attrs:{color:\"red\"}},[t._v(\"article的display设置为flex，左右div宽度固定，中间div的flex属性设置为1，让其自动填充剩下的空间\")])],1)]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v('\\t<section class=\"layout flexbox\">\\n\\t\\t<style type=\"text/css\">\\n\\t\\t\\t.layout.flexbox{\\n\\t\\t\\t\\tmargin-top: 140px;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.flexbox .left-center-right{\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.flexbox .left{\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: red;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.flexbox .center{\\n\\t\\t\\t\\tflex: 1;\\n\\t\\t\\t\\tbackground: yellow;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.flexbox .right{\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: blue;\\n\\t\\t\\t}\\n\\t\\t</style>\\n\\t\\t<article class=\"left-center-right\">\\n\\t\\t\\t<div class=\"left\"></div>\\n\\t\\t\\t<div class=\"center\">\\n\\t\\t\\t\\t<h2>flexbox解决方案</h2>\\n\\t\\t\\t\\t1.这是三栏布局中间部分\\n\\t\\t\\t\\t2.这是三栏布局中间部分\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"right\"></div>\\n\\t\\t</article>\\n\\t</section>\\n')])])]),n(\"h3\",{attrs:{id:\"第四种方法：表格布局\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第四种方法：表格布局\"}},[t._v(\"#\")]),t._v(\" 第四种方法：表格布局\")]),t._v(\" \"),n(\"p\",[t._v(\"这种方法也不难想到，\"),n(\"strong\",[n(\"font\",{attrs:{color:\"red\"}},[t._v(\"移动端有了flex这种神器，table-cell就有点落伍了。方法就是将article的display设置成table，article下的所有div的display设置成table-cell，把不需要自适应的div给个宽度就可以了。\")])],1),t._v(\"\\n顺便说以下，table表格中的单元格最大的特点之一就是同一行列表元素都等高，所以等高布局就可以用到了。\\n代码在这\")]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v('\\t<section class=\"layout table\">\\n\\t\\t<style type=\"text/css\">\\n\\t\\t\\t.layout.table .left-center-right{\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t\\tdisplay: table;\\n\\t\\t\\t\\theight: 100px;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.table .left-center-right>div{\\n\\t\\t\\t\\tdisplay: table-cell;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.table .left{\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: red;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.table .center{\\n\\t\\t\\t\\tbackground: yellow;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.table .right{\\n\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\tbackground: blue;\\n\\t\\t\\t}\\n\\t\\t</style>\\n\\t\\t<article class=\"left-center-right\">\\n\\t\\t\\t<div class=\"left\"></div>\\n\\t\\t\\t<div class=\"center\">\\n\\t\\t\\t\\t<h2>表格解决方案</h2>\\n\\t\\t\\t\\t1.这是三栏布局中间部分\\n\\t\\t\\t\\t2.这是三栏布局中间部分\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"right\"></div>\\n\\t\\t</article>\\n\\t</section>\\n')])])]),n(\"h3\",{attrs:{id:\"第五种方法：网格布局\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第五种方法：网格布局\"}},[t._v(\"#\")]),t._v(\" 第五种方法：网格布局\")]),t._v(\" \"),n(\"p\",[t._v(\"这种不太常用，不过用过的同学想起来也不难，\"),n(\"strong\",[n(\"font\",{attrs:{color:\"red\"}},[t._v(\"既然是网格布局，那就把article的display设置为grid呗，既然是网格，那就要有行和列？既然有行和列，就可以设置行和列的宽高吧？所以这两个属性就来了\"),n(\"font\",{attrs:{color:\"black\"}},[t._v(\"grid-template-rows\")]),t._v(\"和\"),n(\"font\",{attrs:{color:\"black\"}},[t._v(\"grid-template-columns\")]),t._v(\"，不懂的可以看看下面的这个文章\")],1)],1),t._v(\" \"),n(\"a\",{attrs:{href:\"http://blog.csdn.net/iefreer/article/details/50544261\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"http://blog.csdn.net/iefreer/article/details/50544261\"),n(\"OutboundLink\")],1)]),t._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[t._v('\\t<section class=\"layout grid\">\\n\\t\\t<style type=\"text/css\">\\n\\t\\t\\t.layout.grid .left-center-right{\\n\\t\\t\\t\\tdisplay: grid;\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t\\tgrid-template-rows: 100px;\\n\\t\\t\\t\\tgrid-template-columns:300px auto 300px;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.grid .left{\\n\\t\\t\\t\\tbackground: red;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.grid .center{\\n\\t\\t\\t\\tbackground: yellow;\\n\\t\\t\\t}\\n\\t\\t\\t.layout.grid .right{\\n\\t\\t\\t\\tbackground: blue;\\n\\t\\t\\t}\\n\\t\\t</style>\\n\\t\\t<article class=\"left-center-right\">\\n\\t\\t\\t<div class=\"left\"></div>\\n\\t\\t\\t<div class=\"center\">\\n\\t\\t\\t\\t<h2>网格解决方案</h2>\\n\\t\\t\\t\\t1.这是三栏布局中间部分\\n\\t\\t\\t\\t2.这是三栏布局中间部分\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"right\"></div>\\n\\t\\t</article>\\n\\t</section>\\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}